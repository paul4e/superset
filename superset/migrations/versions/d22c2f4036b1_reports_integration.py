# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
"""reports integration

Revision ID: d22c2f4036b1
Revises: ec596e673c5c
Create Date: 2022-01-26 09:27:41.273701

"""

# revision identifiers, used by Alembic.
revision = 'd22c2f4036b1'
down_revision = 'ec596e673c5c'

from alembic import op
import sqlalchemy as sa


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('report_definitions',
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('changed_on', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_name', sa.String(length=250), nullable=False),
    sa.Column('report_title', sa.String(length=250), nullable=True),
    sa.Column('json_metadata', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('report_definition', sa.LargeBinary(), nullable=False),
    sa.Column('created_by_fk', sa.Integer(), nullable=True),
    sa.Column('changed_by_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by_fk'], ['ab_user.id'], ),
    sa.ForeignKeyConstraint(['created_by_fk'], ['ab_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_name')
    )
    op.create_table('report_engines',
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('changed_on', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('verbose_name', sa.String(length=250), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reports_engine_type', sa.Enum('BIRT', name='reportenginetypes'), nullable=True),
    sa.Column('created_by_fk', sa.Integer(), nullable=True),
    sa.Column('changed_by_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by_fk'], ['ab_user.id'], ),
    sa.ForeignKeyConstraint(['created_by_fk'], ['ab_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('verbose_name'),
    sa.UniqueConstraint('verbose_name')
    )
    op.create_table('report_definition_engine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_engine_id', sa.Integer(), nullable=True),
    sa.Column('report_definition_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['report_definition_id'], ['report_definitions.id'], ),
    sa.ForeignKeyConstraint(['report_engine_id'], ['report_engines.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_engine_id', 'report_definition_id')
    )
    op.create_table('report_definition_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('report_definition_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['report_definition_id'], ['report_definitions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_definition_id', 'user_id')
    )
    op.create_table('report_engine_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('report_engine_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['report_engine_id'], ['report_engines.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['ab_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_engine_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('report_engine_user')
    op.drop_table('report_definition_user')
    op.drop_table('report_definition_engine')
    op.drop_table('report_engines')
    op.drop_table('report_definitions')
    # ### end Alembic commands ###
